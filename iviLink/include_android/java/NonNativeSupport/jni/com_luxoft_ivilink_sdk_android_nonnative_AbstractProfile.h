/* 
 * iviLINK SDK, version 1.2
 * http://www.ivilink.net
 * Cross Platform Application Communication Stack for In-Vehicle Applications
 * 
 * Copyright (C) 2012-2013, Luxoft Professional Corp., member of IBS group
 * 
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; version 2.1.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
 * 
 */ 
/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_luxoft_ivilink_sdk_android_nonnative_AbstractProfile */

#ifndef _Included_com_luxoft_ivilink_sdk_android_nonnative_AbstractProfile
#define _Included_com_luxoft_ivilink_sdk_android_nonnative_AbstractProfile
#ifdef __cplusplus
extern "C"
{
#endif
/*
 * Class:     com_luxoft_ivilink_sdk_android_nonnative_AbstractProfile
 * Method:    createNativeProfile
 * Signature: (Ljava/lang/String;Ljava/lang/String;[B)V
 */
JNIEXPORT void JNICALL Java_com_luxoft_ivilink_sdk_android_nonnative_AbstractProfile_createNativeProfile
(JNIEnv *, jobject, jstring, jstring, jlong);

/*
 * Class:     com_luxoft_ivilink_sdk_android_nonnative_AbstractProfile
 * Method:    getProfileCallbacks
 * Signature: ()Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_com_luxoft_ivilink_sdk_android_nonnative_AbstractProfile_getProfileApiCallbacks(
        JNIEnv *, jobject, jlong);

/*
 * Class:     com_luxoft_ivilink_sdk_android_nonnative_AbstractProfile
 * Method:    allocateChannel
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jstring JNICALL Java_com_luxoft_ivilink_sdk_android_nonnative_AbstractProfile_allocateChannelNative(
        JNIEnv *, jobject, jlong, jstring, jint);

/*
 * Class:     com_luxoft_ivilink_sdk_android_nonnative_AbstractProfile
 * Method:    allocateChannelAsServer
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jstring JNICALL Java_com_luxoft_ivilink_sdk_android_nonnative_AbstractProfile_allocateChannelAsServerNative(
        JNIEnv *, jobject, jlong, jstring, jint);

/*
 * Class:     com_luxoft_ivilink_sdk_android_nonnative_AbstractProfile
 * Method:    allocateChannelAsClient
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jstring JNICALL Java_com_luxoft_ivilink_sdk_android_nonnative_AbstractProfile_allocateChannelAsClientNativeNative(
        JNIEnv *, jobject, jlong, jstring, jint);

/*
 * Class:     com_luxoft_ivilink_sdk_android_nonnative_AbstractProfile
 * Method:    deallocateChannel
 * Signature: (I)V
 */
JNIEXPORT jstring JNICALL Java_com_luxoft_ivilink_sdk_android_nonnative_AbstractProfile_deallocateChannelNative(
        JNIEnv *, jobject, jlong, jint);

/*
 * Class:     com_luxoft_ivilink_sdk_android_nonnative_AbstractProfile
 * Method:    sendData
 * Signature: ([BI)V
 */
JNIEXPORT jstring JNICALL Java_com_luxoft_ivilink_sdk_android_nonnative_AbstractProfile_sendDataNative(
        JNIEnv *, jobject, jlong, jbyteArray, jint);

#ifdef __cplusplus
}
#endif
#endif
