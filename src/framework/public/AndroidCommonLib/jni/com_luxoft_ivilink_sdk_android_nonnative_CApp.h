/* 
 * iviLINK SDK, version 1.1.19
 * http://www.ivilink.net
 * Cross Platform Application Communication Stack for In-Vehicle Applications
 * 
 * Copyright (C) 2012, Luxoft Professional Corp., member of IBS group
 * 
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; version 2.1.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
 * 
 */ 
 
/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_luxoft_ivilink_sdk_android_nonnative_CApp */

#ifndef _Included_com_luxoft_ivilink_sdk_android_nonnative_CApp
#define _Included_com_luxoft_ivilink_sdk_android_nonnative_CApp
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_luxoft_ivilink_sdk_android_nonnative_CApp
 * Method:    createAppNative
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
 */
JNIEXPORT void JNICALL Java_com_luxoft_ivilink_sdk_android_nonnative_CApp_createAppNative
  (JNIEnv *, jobject, jstring, jstring, jstring, jobject, jclass profileCreator);

/*
 * Class:     com_luxoft_ivilink_sdk_android_nonnative_CApp
 * Method:    useServiceNative
 * Signature: (Ljava/lang/String;Z)V
 */
JNIEXPORT void JNICALL Java_com_luxoft_ivilink_sdk_android_nonnative_CApp_useServiceNative
  (JNIEnv *, jobject, jstring, jboolean);

/*
 * Class:     com_luxoft_ivilink_sdk_android_nonnative_CApp
 * Method:    registerProfileCallbacksNative
 * Signature: (Ljava/lang/String;Ljava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_com_luxoft_ivilink_sdk_android_nonnative_CApp_registerProfileCallbacksNative
  (JNIEnv *, jobject, jstring, jobject);

/*
 * Class:     com_luxoft_ivilink_sdk_android_nonnative_CApp
 * Method:    initInIviLinkNative
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_luxoft_ivilink_sdk_android_nonnative_CApp_initInIviLinkNative
  (JNIEnv *, jobject);

/*
 * Class:     com_luxoft_ivilink_sdk_android_nonnative_CApp
 * Method:    getLaunchInfoNative
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_luxoft_ivilink_sdk_android_nonnative_CApp_getLaunchInfoNative
  (JNIEnv *, jobject);

/*
 * Class:     com_luxoft_ivilink_sdk_android_nonnative_CApp
 * Method:    loadServiceNative
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_luxoft_ivilink_sdk_android_nonnative_CApp_loadServiceNative
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_luxoft_ivilink_sdk_android_nonnative_CApp
 * Method:    unloadServiceNative
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_luxoft_ivilink_sdk_android_nonnative_CApp_unloadServiceNative
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_luxoft_ivilink_sdk_android_nonnative_CApp
 * Method:    getActiveServicesListSizeNative
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_luxoft_ivilink_sdk_android_nonnative_CApp_getActiveServicesListSizeNative
  (JNIEnv *, jobject);

/*
 * Class:     com_luxoft_ivilink_sdk_android_nonnative_CApp
 * Method:    getActiveServiceByListPositionNative
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_luxoft_ivilink_sdk_android_nonnative_CApp_getActiveServiceByListPositionNative
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_luxoft_ivilink_sdk_android_nonnative_CApp
 * Method:    isServiceActiveNative
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_luxoft_ivilink_sdk_android_nonnative_CApp_isServiceActiveNative
  (JNIEnv *, jobject, jstring);


JNIEXPORT jboolean JNICALL Java_com_luxoft_ivilink_sdk_android_nonnative_CApp_isLinkAliveNative
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
